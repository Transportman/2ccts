/*
 *  Copyright (C) 2017 Transportman
 *  This file is part of the 2cc Trains In NML
 *  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 *  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
*/

/*	This file is used to determine which vehicles can be attached to which vehicles.
 *  First the ID of the attaching vehicle is detected:
 *  Engines will always be allowed to attach
 *  Regular wagons and coaches will only be attached to regular engines
 *	Unit wagons are only allowed behind other Unit wagons and the front heads of MUs
*/

/*
* Regular wagons/coaches
*/

//Check vehicle ID of the vehicle in front of the wagon being attached
//The offset for var 61 is determined by position_in_consist_from_end, which results in the last wagon before the vehicle being attached
switch(FEAT_TRAINS, PARENT, switch_can_attach_wagon, [STORE_TEMP(position_in_consist_from_end, 0x10F), var[0x61, 0, 0x0000FFFF, 0xC6]]) {
	ID_RANGE_RBS: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //Steam Railbus, allow
	ID_RANGE_RBD: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //Diesel Railbus, allow
	ID_RANGE_RBE: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //Electric Railbus, allow
	ID_RANGE_STEAM: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //Steam, allow
	ID_RANGE_DIESEL: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //Diesel, allow
	ID_RANGE_ELECTRIC: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //Electric, allow
	ID_RANGE_DMU: string(str_cannot_attach_wagon_to_MU); //DMU, disallow
	ID_RANGE_EMU: string(str_cannot_attach_wagon_to_MU); //EMU, disallow
	ID_RANGE_MULTIMETRO: string(str_cannot_attach_wagon_to_MU); //Multi Unit Metro, disallow
	ID_RANGE_MULTIMAGLEV: string(str_cannot_attach_wagon_to_MU); //Multi Unit Maglev, disallow
	ID_RANGE_COACHES: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //Coaches, allow
	ID_RANGE_WAGONS: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //Wagons, allow
	ID_RANGE_UNIT_WAGONS: string(str_cannot_attach_wagon_to_Unit_Wagon); //Unit Wagons, disallow
	ID_RANGE_SINGLEMETRO: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //Single Unit Metro, allow
	ID_RANGE_SMU: string(str_cannot_attach_wagon_to_MU); //SMU, disallow
	ID_RANGE_CARGODMU: string(str_cannot_attach_wagon_to_MU); //CargoDMU, disallow
	ID_RANGE_SINGLEMAGLEV: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //Single Unit Maglev, allow
	ID_RANGE_RBM: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //Maglev Railbus, allow
	CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES;
}

/*
* Unit Wagon
*/

//Check vehicle ID of the vehicle in front of the unit wagon being attached
//The offset for var 61 is determined by position_in_consist_from_end, which results in the last wagon before the vehicle being attached
switch(FEAT_TRAINS, PARENT, switch_can_attach_unit_rail, [STORE_TEMP(position_in_consist_from_end, 0x10F), var[0x61, 0, 0x0000FFFF, 0xC6]]) {
	ID_RANGE_RBS: string(str_cannot_attach_Unit_wagon_to_engine); //Steam Railbus, disallow
	ID_RANGE_RBD: string(str_cannot_attach_Unit_wagon_to_engine); //Diesel Railbus, disallow
	ID_RANGE_RBE: string(str_cannot_attach_Unit_wagon_to_engine); //Electric Railbus, disallow
	ID_RANGE_STEAM: string(str_cannot_attach_Unit_wagon_to_engine); //Steam, disallow
	ID_RANGE_DIESEL: string(str_cannot_attach_Unit_wagon_to_engine); //Diesel, disallow
	ID_RANGE_ELECTRIC: string(str_cannot_attach_Unit_wagon_to_engine); //Electric, disallow
	ID_RANGE_DMU: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //DMU, allow
	ID_RANGE_EMU: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //EMU, allow
	ID_RANGE_MULTIMETRO: CB_RESULT_ATTACH_DISALLOW; //Multi Unit Metro, disallow
	ID_RANGE_MULTIMAGLEV: CB_RESULT_ATTACH_DISALLOW; //Multi Unit Maglev, disallow
	ID_RANGE_COACHES: string(str_cannot_attach_Unit_wagon_to_wagon); //Coaches, disallow
	ID_RANGE_WAGONS: string(str_cannot_attach_Unit_wagon_to_wagon); //Wagons, disallow
	ID_RANGE_UNIT_WAGONS_RAIL: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //Same type, allow
	ID_RANGE_UNIT_WAGONS_MTRO: CB_RESULT_ATTACH_DISALLOW; //Different type, disallow
	ID_RANGE_UNIT_WAGONS_MGLV: CB_RESULT_ATTACH_DISALLOW; //Different type, disallow
	ID_RANGE_UNIT_WAGONS_RAIL_CARGO: CB_RESULT_ATTACH_DISALLOW; //Different type, disallow
	ID_RANGE_SINGLEMETRO: string(str_cannot_attach_Unit_wagon_to_engine); //Single Unit Metro, disallow
	ID_RANGE_SMU: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //SMU, allow
	ID_RANGE_CARGODMU: string(str_cannot_attach_Unit_wagon_passenger_to_cargo); //CargoDMU, disallow
	ID_RANGE_SINGLEMAGLEV: string(str_cannot_attach_Unit_wagon_to_engine); //Single Unit Maglev, disallow
	ID_RANGE_RBM: string(str_cannot_attach_Unit_wagon_to_engine); //Maglev Railbus, disallow
	CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES;
}

//Check vehicle ID of the vehicle in front of the unit wagon being attached
//The offset for var 61 is determined by position_in_consist_from_end, which results in the last wagon before the vehicle being attached
switch(FEAT_TRAINS, PARENT, switch_can_attach_unit_mtro, [STORE_TEMP(position_in_consist_from_end, 0x10F), var[0x61, 0, 0x0000FFFF, 0xC6]]) {
	ID_RANGE_RBS: string(str_cannot_attach_Unit_wagon_to_engine); //Steam Railbus, disallow
	ID_RANGE_RBD: string(str_cannot_attach_Unit_wagon_to_engine); //Diesel Railbus, disallow
	ID_RANGE_RBE: string(str_cannot_attach_Unit_wagon_to_engine); //Electric Railbus, disallow
	ID_RANGE_STEAM: string(str_cannot_attach_Unit_wagon_to_engine); //Steam, disallow
	ID_RANGE_DIESEL: string(str_cannot_attach_Unit_wagon_to_engine); //Diesel, disallow
	ID_RANGE_ELECTRIC: string(str_cannot_attach_Unit_wagon_to_engine); //Electric, disallow
	ID_RANGE_DMU: CB_RESULT_ATTACH_DISALLOW; //DMU, disallow
	ID_RANGE_EMU: CB_RESULT_ATTACH_DISALLOW; //EMU, disallow
	ID_RANGE_MULTIMETRO: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //Multi Unit Metro, allow
	ID_RANGE_MULTIMAGLEV: CB_RESULT_ATTACH_DISALLOW; //Multi Unit Maglev, disallow
	ID_RANGE_COACHES: string(str_cannot_attach_Unit_wagon_to_wagon); //Coaches, disallow
	ID_RANGE_WAGONS: string(str_cannot_attach_Unit_wagon_to_wagon); //Wagons, disallow
	ID_RANGE_UNIT_WAGONS_RAIL: CB_RESULT_ATTACH_DISALLOW; //Different type, disallow
	ID_RANGE_UNIT_WAGONS_MTRO: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //Same type, allow
	ID_RANGE_UNIT_WAGONS_MGLV: CB_RESULT_ATTACH_DISALLOW; //Different type, disallow
	ID_RANGE_UNIT_WAGONS_RAIL_CARGO: CB_RESULT_ATTACH_DISALLOW; //Different type, disallow
	ID_RANGE_SINGLEMETRO: string(str_cannot_attach_Unit_wagon_to_engine); //Single Unit Metro, disallow
	ID_RANGE_SMU: CB_RESULT_ATTACH_DISALLOW; //SMU, disallow
	ID_RANGE_CARGODMU: string(str_cannot_attach_Unit_wagon_passenger_to_cargo); //CargoDMU, disallow
	ID_RANGE_SINGLEMAGLEV: string(str_cannot_attach_Unit_wagon_to_engine); //Single Unit Maglev, disallow
	ID_RANGE_RBM: string(str_cannot_attach_Unit_wagon_to_engine); //Maglev Railbus, disallow
	CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES;
}

//Check vehicle ID of the vehicle in front of the unit wagon being attached
//The offset for var 61 is determined by position_in_consist_from_end, which results in the last wagon before the vehicle being attached
switch(FEAT_TRAINS, PARENT, switch_can_attach_unit_mglv, [STORE_TEMP(position_in_consist_from_end, 0x10F), var[0x61, 0, 0x0000FFFF, 0xC6]]) {
	ID_RANGE_RBS: string(str_cannot_attach_Unit_wagon_to_engine); //Steam Railbus, disallow
	ID_RANGE_RBD: string(str_cannot_attach_Unit_wagon_to_engine); //Diesel Railbus, disallow
	ID_RANGE_RBE: string(str_cannot_attach_Unit_wagon_to_engine); //Electric Railbus, disallow
	ID_RANGE_STEAM: string(str_cannot_attach_Unit_wagon_to_engine); //Steam, disallow
	ID_RANGE_DIESEL: string(str_cannot_attach_Unit_wagon_to_engine); //Diesel, disallow
	ID_RANGE_ELECTRIC: string(str_cannot_attach_Unit_wagon_to_engine); //Electric, disallow
	ID_RANGE_DMU: CB_RESULT_ATTACH_DISALLOW; //DMU, disallow
	ID_RANGE_EMU: CB_RESULT_ATTACH_DISALLOW; //EMU, disallow
	ID_RANGE_MULTIMETRO: CB_RESULT_ATTACH_DISALLOW; //Multi Unit Metro, disallow
	ID_RANGE_MULTIMAGLEV: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //Multi Unit Maglev, allow
	ID_RANGE_COACHES: string(str_cannot_attach_Unit_wagon_to_wagon); //Coaches, disallow
	ID_RANGE_WAGONS: string(str_cannot_attach_Unit_wagon_to_wagon); //Wagons, disallow
	ID_RANGE_UNIT_WAGONS_RAIL: CB_RESULT_ATTACH_DISALLOW; //Different type, disallow
	ID_RANGE_UNIT_WAGONS_MTRO: CB_RESULT_ATTACH_DISALLOW; //Different type, disallow
	ID_RANGE_UNIT_WAGONS_MGLV: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //Same railtype, allow
	ID_RANGE_UNIT_WAGONS_RAIL_CARGO: CB_RESULT_ATTACH_DISALLOW; //Different type, disallow
	ID_RANGE_SINGLEMETRO: string(str_cannot_attach_Unit_wagon_to_engine); //Single Unit Metro, disallow
	ID_RANGE_SMU: CB_RESULT_ATTACH_DISALLOW; //SMU, disallow
	ID_RANGE_CARGODMU: string(str_cannot_attach_Unit_wagon_passenger_to_cargo); //CargoDMU, disallow
	ID_RANGE_SINGLEMAGLEV: string(str_cannot_attach_Unit_wagon_to_engine); //Single Unit Maglev, disallow
	ID_RANGE_RBM: string(str_cannot_attach_Unit_wagon_to_engine); //Maglev Railbus, disallow
	CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES;
}

//Check vehicle ID of the vehicle in front of the unit wagon being attached
//The offset for var 61 is determined by position_in_consist_from_end, which results in the last wagon before the vehicle being attached
switch(FEAT_TRAINS, PARENT, switch_can_attach_unit_rail_cargo, [STORE_TEMP(position_in_consist_from_end, 0x10F), var[0x61, 0, 0x0000FFFF, 0xC6]]) {
	ID_RANGE_RBS: string(str_cannot_attach_Unit_wagon_to_engine); //Steam Railbus, disallow
	ID_RANGE_RBD: string(str_cannot_attach_Unit_wagon_to_engine); //Diesel Railbus, disallow
	ID_RANGE_RBE: string(str_cannot_attach_Unit_wagon_to_engine); //Electric Railbus, disallow
	ID_RANGE_STEAM: string(str_cannot_attach_Unit_wagon_to_engine); //Steam, disallow
	ID_RANGE_DIESEL: string(str_cannot_attach_Unit_wagon_to_engine); //Diesel, disallow
	ID_RANGE_ELECTRIC: string(str_cannot_attach_Unit_wagon_to_engine); //Electric, disallow
	ID_RANGE_DMU: string(str_cannot_attach_Unit_wagon_cargo_to_passenger); //DMU, disallow
	ID_RANGE_EMU: string(str_cannot_attach_Unit_wagon_cargo_to_passenger); //EMU, disallow
	ID_RANGE_MULTIMETRO: CB_RESULT_ATTACH_DISALLOW; //Multi Unit Metro, disallow
	ID_RANGE_MULTIMAGLEV: CB_RESULT_ATTACH_DISALLOW; //Multi Unit Maglev, disallow
	ID_RANGE_COACHES: string(str_cannot_attach_Unit_wagon_to_wagon); //Coaches, disallow
	ID_RANGE_WAGONS: string(str_cannot_attach_Unit_wagon_to_wagon); //Wagons, disallow
	ID_RANGE_UNIT_WAGONS_RAIL: CB_RESULT_ATTACH_DISALLOW; //Differnt type, disallow
	ID_RANGE_UNIT_WAGONS_MTRO: CB_RESULT_ATTACH_DISALLOW; //Different type, disallow
	ID_RANGE_UNIT_WAGONS_MGLV: CB_RESULT_ATTACH_DISALLOW; //Different type, disallow
	ID_RANGE_UNIT_WAGONS_RAIL_CARGO: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //Same type, allow
	ID_RANGE_SINGLEMETRO: string(str_cannot_attach_Unit_wagon_to_engine); //Single Unit Metro, disallow
	ID_RANGE_SMU: string(str_cannot_attach_Unit_wagon_cargo_to_passenger); //SMU, disallow
	ID_RANGE_CARGODMU: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //CargoDMU, allow
	ID_RANGE_SINGLEMAGLEV: string(str_cannot_attach_Unit_wagon_to_engine); //Single Unit Maglev, disallow
	ID_RANGE_RBM: string(str_cannot_attach_Unit_wagon_to_engine); //Maglev Railbus, disallow
	CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES;
}

/*	Check vehicle ID to determine which case we have. 
 *	Engines are always allowed
 *	Wagons depend on vehicle in front of it
*/
switch(FEAT_TRAINS, SELF, switch_can_attach_vehicle, vehicle_type_id) {
	ID_RANGE_RBS: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //Steam Railbus, always allow
	ID_RANGE_RBD: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //Diesel Railbus, always allow
	ID_RANGE_RBE: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //Electric Railbus, always allow
	ID_RANGE_STEAM: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //Steam, always allow
	ID_RANGE_DIESEL: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //Diesel, always allow
	ID_RANGE_ELECTRIC: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //Electric, always allow
	ID_RANGE_DMU: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //DMU, always allow
	ID_RANGE_EMU: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //EMU, always allow
	ID_RANGE_MULTIMETRO: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //Multi Unit Metro, always allow
	ID_RANGE_MULTIMAGLEV: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //Multi Unit Maglev, always allow
	ID_RANGE_COACHES: switch_can_attach_wagon; //Coaches, go to Regular-switch
	ID_RANGE_WAGONS: switch_can_attach_wagon; //Wagons, go to Regular-switch
	ID_RANGE_UNIT_WAGONS_RAIL: switch_can_attach_unit_rail; //Unit Wagons rail, go to Unit-switch rail
	ID_RANGE_UNIT_WAGONS_MTRO: switch_can_attach_unit_mtro; //Unit Wagons metro, go to Unit-switch metro
	ID_RANGE_UNIT_WAGONS_MGLV: switch_can_attach_unit_mglv; //Unit Wagons maglev, go to Unit-switch maglev
	ID_RANGE_UNIT_WAGONS_RAIL_CARGO: switch_can_attach_unit_rail_cargo; //Unit Wagons rail cargo, go to Unit-switch rail cargo
	ID_RANGE_SINGLEMETRO: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //Single Unit Metro, always allow
	ID_RANGE_SMU: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //SMU, always allow
	ID_RANGE_SINGLEMAGLEV: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //Single Unit Maglev, always allow
	ID_RANGE_RBM: CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES; //Maglev Railbus, always allow
	CB_RESULT_ATTACH_ALLOW_IF_RAILTYPES;
}